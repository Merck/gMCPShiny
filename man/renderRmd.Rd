% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/output-rmd.R
\name{renderRmd}
\alias{renderRmd}
\alias{rmdOutput}
\title{Render R Markdown with syntax highlighting}
\usage{
renderRmd(
  expr,
  env = parent.frame(),
  quoted = FALSE,
  outputArgs = list(),
  delay = 100
)

rmdOutput(outputId)
}
\arguments{
\item{expr}{An expression to evaluate.}

\item{env}{The parent environment for the reactive expression. By default,
this is the calling environment, the same as when defining an ordinary
non-reactive expression. If \code{expr} is a quosure and \code{quoted} is \code{TRUE},
then \code{env} is ignored.}

\item{quoted}{If it is \code{TRUE}, then the \code{\link[=quote]{quote()}}ed value of \code{expr}
will be used when \code{expr} is evaluated. If \code{expr} is a quosure and you
would like to use its expression as a value for \code{expr}, then you must set
\code{quoted} to \code{TRUE}.}

\item{outputArgs}{List of additional arguments to pass to the
output function.}

\item{delay}{Delay in milliseconds before syntax highlighting starts.}

\item{outputId}{Output variable to read the R Markdown from.}
}
\value{
A render function similar to \code{\link[shiny:renderPrint]{shiny::renderText()}}.
}
\description{
Renders R Markdown with syntax highlighting using the highlight.js library.
}
\examples{
if (interactive()) {
  library("shiny")

  ui <- fluidPage(
    fluidRow(
      column(
        4,
        textAreaInput(
          "rmd_in",
          label = NULL,
          width = "100\%", height = "500px",
          value = "---\ntitle: Title\noutput: pdf_document\n---\n\n# Heading"
        )
      ),
      column(
        8,
        rmdOutput("rmd_out")
      )
    )
  )

  server <- function(input, output) {
    output$rmd_out <- renderRmd({
      htmltools::htmlEscape(input$rmd_in)
    })
  }

  shinyApp(ui = ui, server = server)
}
}
